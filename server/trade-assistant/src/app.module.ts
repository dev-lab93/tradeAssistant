import { Module } from '@nestjs/common';
import { TypeOrmModule } from '@nestjs/typeorm';
import { ConfigModule, ConfigService } from '@nestjs/config';

// üß© –ú–æ–¥—É–ª–∏
import { AuthModule } from './auth/auth.module';
import { UsersModule } from './users/users.module';
import { ProductsModule } from './products/products.module';
import { NewsModule } from './news/news.module';
@Module({
  imports: [
    // üì¶ .env –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—ò–∞
    ConfigModule.forRoot({
      isGlobal: true,
    }),

    // üóÑÔ∏è TypeORM –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—ò–∞ (PostgreSQL)
    TypeOrmModule.forRootAsync({
      imports: [ConfigModule],
      useFactory: (config: ConfigService) => ({
        type: 'postgres',
        host: config.get<string>('DB_HOST'),
        port: config.get<number>('DB_PORT'),
        username: config.get<string>('DB_USERNAME'),
        password: config.get<string>('DB_PASSWORD'),
        database: config.get<string>('DB_NAME'),
        autoLoadEntities: true, // –∞–≤—Ç–æ–º–∞—Ç—Å–∫–∏ –≥–∏ –≤—á–∏—Ç—É–≤–∞ —Å–∏—Ç–µ entity –∫–ª–∞—Å–∏
        synchronize: true, // ‚ùó –∑–∞ –ø—Ä–æ–¥—É–∫—Ü–∏—ò–∞ –ø–æ—Å—Ç–∞–≤–∏ –Ω–∞ false
      }),
      inject: [ConfigService],
    }),

    // üìö –ú–æ–¥—É–ª–∏ –Ω–∞ –∞–ø–ª–∏–∫–∞—Ü–∏—ò–∞—Ç–∞
    UsersModule,
    AuthModule,
    ProductsModule,
    NewsModule,
  ],
})
export class AppModule {}
